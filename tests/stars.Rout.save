
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # 0. using sp:
> 
> library(sp)
> demo(meuse, ask = FALSE)


	demo(meuse)
	---- ~~~~~

> require(sp)

> crs = CRS("+init=epsg:28992")

> data("meuse")

> coordinates(meuse) <- ~x+y

> proj4string(meuse) <- crs

> data("meuse.grid")

> coordinates(meuse.grid) <- ~x+y

> gridded(meuse.grid) <- TRUE

> proj4string(meuse.grid) <- crs

> data("meuse.riv")

> meuse.riv <- SpatialPolygons(list(Polygons(list(Polygon(meuse.riv)),"meuse.riv")))

> proj4string(meuse.riv) <- crs

> data("meuse.area")

> meuse.area = SpatialPolygons(list(Polygons(list(Polygon(meuse.area)), "area")))

> proj4string(meuse.area) <- crs
> library(gstat)
> v = variogram(log(zinc)~1, meuse)
> (v.fit = fit.variogram(v, vgm(1, "Sph", 900, 1)))
  model      psill    range
1   Nug 0.05066243   0.0000
2   Sph 0.59060780 897.0209
> k_sp = krige(log(zinc)~1, meuse[-(1:5),], meuse[1:5,], v.fit)
[using ordinary kriging]
> k_sp_grd = krige(log(zinc)~1, meuse, meuse.grid, v.fit)
[using ordinary kriging]
> 
> # 1. using sf:
> library(sf)
Linking to GEOS 3.7.0, GDAL 2.3.2, PROJ 5.2.0
> demo(meuse_sf, ask = FALSE, echo = FALSE)
> # reloads meuse as data.frame, so
> demo(meuse, ask = FALSE)


	demo(meuse)
	---- ~~~~~

> require(sp)

> crs = CRS("+init=epsg:28992")

> data("meuse")

> coordinates(meuse) <- ~x+y

> proj4string(meuse) <- crs

> data("meuse.grid")

> coordinates(meuse.grid) <- ~x+y

> gridded(meuse.grid) <- TRUE

> proj4string(meuse.grid) <- crs

> data("meuse.riv")

> meuse.riv <- SpatialPolygons(list(Polygons(list(Polygon(meuse.riv)),"meuse.riv")))

> proj4string(meuse.riv) <- crs

> data("meuse.area")

> meuse.area = SpatialPolygons(list(Polygons(list(Polygon(meuse.area)), "area")))

> proj4string(meuse.area) <- crs
> 
> library(gstat)
> v = variogram(log(zinc)~1, meuse_sf)
> (v.fit = fit.variogram(v, vgm(1, "Sph", 900, 1)))
  model      psill    range
1   Nug 0.05066243   0.0000
2   Sph 0.59060780 897.0209
> k_sf = krige(log(zinc)~1, meuse_sf[-(1:5),], meuse_sf[1:5,], v.fit)
[using ordinary kriging]
> 
> all.equal(k_sp, as(k_sf, "Spatial"), check.attributes = FALSE)
[1] TRUE
> all.equal(k_sp, as(k_sf, "Spatial"), check.attributes = TRUE)
[1] "Attributes: < Component \"bbox\": Attributes: < Component \"dimnames\": Component 1: 2 string mismatches > >"  
[2] "Attributes: < Component \"coords\": Attributes: < Component \"dimnames\": Component 2: 2 string mismatches > >"
[3] "Attributes: < Component \"coords.nrs\": Numeric: lengths (2, 0) differ >"                                      
[4] "Attributes: < Component \"proj4string\": Attributes: < Component \"projargs\": 1 string mismatch > >"          
> 
> # 2. using stars for grid:
> 
> library(rgdal)
rgdal: version: 1.3-6, (SVN revision 773)
 Geospatial Data Abstraction Library extensions to R successfully loaded
 Loaded GDAL runtime: GDAL 2.3.2, released 2018/09/21
 Path to GDAL shared files: /usr/share/gdal
 GDAL binary built with GEOS: TRUE 
 Loaded PROJ.4 runtime: Rel. 5.2.0, September 15th, 2018, [PJ_VERSION: 520]
 Path to PROJ.4 shared files: (autodetected)
 Linking to sp version: 1.3-1 
> writeGDAL(meuse.grid[,"dist"], "meuse.tif", "GTiff")
> library(stars)
Loading required package: abind
> (st = setNames(read_stars("meuse.tif"), "dist"))
stars object with 2 dimensions and 1 attribute
attribute(s):
     dist       
 Min.   :0.000  
 1st Qu.:0.119  
 Median :0.272  
 Mean   :0.297  
 3rd Qu.:0.440  
 Max.   :0.993  
 NA's   :5009   
dimension(s):
  from  to offset delta                       refsys point values    
x    1  78 178440    40 +proj=sterea +lat_0=52.15... FALSE   NULL [x]
y    1 104 333760   -40 +proj=sterea +lat_0=52.15... FALSE   NULL [y]
> 
> # compare inputs:
> sp = as(st, "Spatial")
> fullgrid(meuse.grid) = TRUE
> all.equal(sp, meuse.grid["dist"], check.attributes = FALSE)
[1] TRUE
> all.equal(sp, meuse.grid["dist"], check.attributes = TRUE, use.names = FALSE)
[1] "Attributes: < Component 1: Attributes: < Component 2: Component 1: 1 string mismatch > >"      
[2] "Attributes: < Component 3: Component 1: Mean relative difference: 2.126912e-08 >"              
[3] "Attributes: < Component 4: Attributes: < Component 1: Names: 1 string mismatch > >"            
[4] "Attributes: < Component 4: Attributes: < Component 2: names for current but not for target > >"
[5] "Attributes: < Component 4: Attributes: < Component 3: names for current but not for target > >"
[6] "Attributes: < Component 5: Attributes: < Component 2: 1 string mismatch > >"                   
> 
> # kriging:
> st_crs(st) = st_crs(meuse_sf) # GDAL roundtrip messes them up!
> k_st = krige(log(zinc)~1, meuse_sf, st, v.fit)
[using ordinary kriging]
> k_st
stars object with 2 dimensions and 2 attributes
attribute(s):
   var1.pred       var1.var     
 Min.   :4.777   Min.   :0.085  
 1st Qu.:5.238   1st Qu.:0.137  
 Median :5.573   Median :0.162  
 Mean   :5.707   Mean   :0.185  
 3rd Qu.:6.172   3rd Qu.:0.212  
 Max.   :7.440   Max.   :0.500  
 NA's   :5009    NA's   :5009   
dimension(s):
  from  to offset delta                       refsys point values    
x    1  78 178440    40 +proj=sterea +lat_0=52.15...    NA   NULL [x]
y    1 104 333760   -40 +proj=sterea +lat_0=52.15...    NA   NULL [y]
> 
> # handle factors, when going to stars?
> k_sp_grd$cls = cut(k_sp_grd$var1.pred, c(0, 5, 6, 7, 8, 9))
> st_as_stars(k_sp_grd)
stars object with 2 dimensions and 3 attributes
attribute(s):
   var1.pred       var1.var         cls      
 Min.   :4.777   Min.   :0.085   (0,5]: 316  
 1st Qu.:5.238   1st Qu.:0.137   (5,6]:1778  
 Median :5.573   Median :0.162   (6,7]: 962  
 Mean   :5.707   Mean   :0.185   (7,8]:  47  
 3rd Qu.:6.172   3rd Qu.:0.212   (8,9]:   0  
 Max.   :7.440   Max.   :0.500   NA's :5009  
 NA's   :5009    NA's   :5009                
dimension(s):
  from  to offset delta                       refsys point values    
x    1  78 178440    40 +proj=sterea +lat_0=52.15...    NA   NULL [x]
y    1 104 333760   -40 +proj=sterea +lat_0=52.15...    NA   NULL [y]
> st_as_stars(raster::stack(k_sp_grd)) # check
stars object with 3 dimensions and 1 attribute
attribute(s):
   var1.pred    
 Min.   :0.085  
 1st Qu.:0.212  
 Median :2.000  
 Mean   :2.710  
 3rd Qu.:5.238  
 Max.   :7.440  
 NA's   :15027  
dimension(s):
     from  to offset delta                       refsys point
x       1  78 178440    40 +init=epsg:28992 +proj=st...    NA
y       1 104 333760   -40 +init=epsg:28992 +proj=st...    NA
band    1   3     NA    NA                           NA    NA
                  values    
x                   NULL [x]
y                   NULL [y]
band var1.pred, ..., cls    
> 
> all.equal(st_redimension(st_as_stars(k_sp_grd)), st_as_stars(raster::stack(k_sp_grd)), check.attributes=FALSE)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  2.130   0.103   2.227 
